def build_room(prior_room, request) -> room {
    room = {};
    room.doors = prior_room;
    room.room_type = request.room_type;
    budget_remaining = request.budget;
    if budget_remaining > 10000 {
        room.ceiling_height_meters = 4
    } else {
        room.ceiling_height_meters = 3
    };
    if request.room_type == "bedroom" {
        room.width_meters = 7;
        room.length_meters = 5;
        if budget_remaining > 5200 {
            master_bath = {};
            master_bath.budget = 2300;
            master_bath.room_type = "bathroom";
            room.doors = room.doors + build_room(room, master_bath)
        }
    };
    if request.room_type == "bathroom" {
        room.width_meters = 2;
        room.length_meters = 3;
        room.needs_plumbing = true
    };
    if request.room_type == "hall" {
        if budget_remaining / 2 > 3000 {
            bedroom = {};
            bedroom.budget = budget_remaining / 3;
            bedroom.room_type = "bedroom";
            room.doors = room.doors + build_room(room, bedroom);
            budget_remaining = budget_remaining - bedroom.budget
        };
        if budget_remaining / 3 > 1000 {
            bathroom = {};
            bathroom.budget = budget_remaining / 3;
            bathroom.room_type = "bathroom";
            room.doors = room.doors + build_room(room, bathroom);
            budget_remaining = budget_remaining - bathroom.budget
        };
        if budget_remaining > 5000 {
            next_hall = {};
            next_hall.budget = budget_remaining;
            next_hall.room_type = "hall";
            next_hall_built = build_room(room, next_hall);
            room.doors = room.doors + next_hall_built;
            budget_remaining = budget_remaining - cost_of(next_hall_built) 
                
        }
    };
    return room
}

def is_valid(x) -> y { return x }

def cost_of(x) -> y { return x }


