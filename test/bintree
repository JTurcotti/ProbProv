def new_node(left, val, right) -> node {
    return left + val + right
}

def contains_val(tree, val) -> ret {
    if tree.val == val {
        return true
    } else {
        if tree.val > val {
            return tree.left != null && contains_val(tree.left, val)       	  	       } else {
            return tree.right != null && contains_val(tree.right, val)
        }
    }
}

def insert_val(tree, val) -> new_tree {
    if contains_val(tree, val) {
        return tree
    } else {
        if tree.val > val {
            if tree.left == null {
	        return new_node(new_node(null, val, null), tree.val, tree.right)
	    } else {
	        return new_node(insert_val(tree.left, val), tree.val, tree.right)
            }
        } else {
      	    if tree.right == null {
	        return new_node(tree.left, tree.val, new_node(null, val, null))
	    } else {
	        return new_node(tree.left, tree.val, insert_val(tree.left, val))
	    }
        }
    }
}
          
